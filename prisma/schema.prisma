generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model SequelizeMeta {
  name String @id @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model accident_and_change_histories {
  id                     BigInt    @id @default(autoincrement())
  vehicle_id             BigInt    @unique
  current_accident_count Int       @default(0)
  other_accident_count   Int       @default(0)
  robber_count           Int       @default(0)
  robber_date            DateTime? @db.Date
  total_loss_count       Int       @default(0)
  total_loss_date        DateTime? @db.Date
  flood_total_loss_count Int       @default(0)
  flood_part_loss_count  Int       @default(0)
  flood_date             DateTime? @db.Date
  current_accident_cost  Int       @default(0)
  other_accident_cost    Int       @default(0)
  government             Boolean   @default(false)
  business               Boolean   @default(false)
  loan                   Boolean   @default(false)
  created_at             DateTime  @db.Timestamptz(6)
  updated_at             DateTime  @db.Timestamptz(6)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model accident_details {
  id                BigInt   @id @default(autoincrement())
  vehicle_id        BigInt
  type              String   @db.VarChar(15)
  date              DateTime @db.Date
  insurance_benefit Int      @default(0)
  part_cost         Int      @default(0)
  labor_cost        Int      @default(0)
  painting_cost     Int      @default(0)
  created_at        DateTime @db.Timestamptz(6)
  updated_at        DateTime @db.Timestamptz(6)

  @@unique([vehicle_id, date], map: "accident_details_vehicle_id_date_unique")
}

model active_lots {
  id                      BigInt   @id @default(autoincrement())
  vehicle_id              BigInt   @unique
  vehicle_fake_id_on_site Int?
  is_checked              Boolean  @default(false)
  created_at              DateTime @db.Timestamptz(6)
  updated_at              DateTime @db.Timestamptz(6)
}

model advertisement_trust_label {
  id               BigInt   @id @default(autoincrement())
  trust_label_id   Int
  advertisement_id BigInt
  created_at       DateTime @db.Timestamptz(6)
  updated_at       DateTime @db.Timestamptz(6)

  @@unique([advertisement_id, trust_label_id], map: "advertisement_trust_label_unique_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model advertisements {
  id                         BigInt   @id @default(autoincrement())
  vehicle_id                 BigInt   @unique
  registered_date_time       DateTime @db.Timestamptz(6)
  first_advertised_date_time DateTime @db.Timestamptz(6)
  price                      Int      @default(0)
  subscribe_count            Int      @default(0)
  view_count                 Int      @default(0)
  advertisement_status_id    BigInt
  created_at                 DateTime @db.Timestamptz(6)
  updated_at                 DateTime @db.Timestamptz(6)
}

model car_info_changes {
  id           BigInt   @id @default(autoincrement())
  vehicle_id   BigInt
  date         DateTime @db.Date
  plate_number String   @db.VarChar(25)
  created_at   DateTime @db.Timestamptz(6)
  updated_at   DateTime @db.Timestamptz(6)

  @@unique([vehicle_id, date, plate_number], map: "car_info_changes_unique")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model companies {
  id                           Int      @id @default(autoincrement())
  company_type_id              Int
  company_name                 String   @db.VarChar(255)
  company_name_english         String?  @db.VarChar(255)
  error_translate              Boolean  @default(false)
  brn                          String   @unique @db.VarChar(100)
  association_id               Int?
  certificated_employee_number String?  @db.VarChar(55)
  province_id                  Int?
  district_id                  Int?
  address_id                   Int?
  zipcode                      Int?
  created_at                   DateTime @db.Timestamptz(6)
  updated_at                   DateTime @db.Timestamptz(6)
}

model diagnosis_items {
  id                  BigInt   @id @default(autoincrement())
  diagnostic_id       BigInt
  diagnosis_code_id   Int
  diagnosis_result_id Int?
  comment_id          Int?
  created_at          DateTime @db.Timestamptz(6)
  updated_at          DateTime @db.Timestamptz(6)

  @@unique([diagnostic_id, diagnosis_code_id], map: "diagnostic_diagnosis_code_unique_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model diagnostic_centers {
  id                    Int      @id @default(autoincrement())
  checker_id_code       String   @unique @db.VarChar(55)
  checker_name          String   @db.VarChar(255)
  checker_name_english  String?  @db.VarChar(255)
  error_translate       Boolean  @default(false)
  center_code           String   @db.VarChar(55)
  reservation_center_id Int?
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model diagnostics {
  id                       BigInt   @id @default(autoincrement())
  vehicle_id               BigInt   @unique
  diagnosis_number         Int
  scheduled_diagnosis_date DateTime @db.Date
  actual_diagnostic_date   DateTime @db.Date
  diagnostic_center_id     Int
  order_number             Int?
  register_id_code         String   @db.VarChar(55)
  created_at               DateTime @db.Timestamptz(6)
  updated_at               DateTime @db.Timestamptz(6)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model encar_vehicles {
  id                    BigInt   @id @default(autoincrement())
  vehicle_id_on_auction Int      @unique
  vehicle_plate_number  String?  @db.VarChar(55)
  vehicle_type_id       Int
  extend_warranty       Boolean?
  diagnosis_passed      Boolean?
  pre_verified          Boolean?
  sell_type_id          Int
  seller_id             Int?
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  details               vehicle_details?
  photos                vehicle_photos []
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model insurance_certificates {
  id                BigInt   @id @default(autoincrement())
  vehicle_id        BigInt
  registration_date DateTime @db.Date
  first_date        DateTime @db.Date
  car_kind          String   @db.VarChar(55)
  use_type          String   @db.VarChar(55)
  created_at        DateTime @db.Timestamptz(6)
  updated_at        DateTime @db.Timestamptz(6)

  @@unique([vehicle_id, registration_date], map: "insurance_certificates_vehicle_unique")
}

model lib_addresses {
  id              Int      @id @default(autoincrement())
  address         String   @unique @db.VarChar(255)
  address_english String?  @db.VarChar(255)
  error_translate Boolean  @default(false)
  created_at      DateTime @db.Timestamptz(6)
  updated_at      DateTime @db.Timestamptz(6)
}

model lib_advertisement_statuses {
  id         Int      @id @default(autoincrement())
  status     String   @unique @db.VarChar(55)
  created_at DateTime @db.Timestamptz(6)
  updated_at DateTime @db.Timestamptz(6)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model lib_associations {
  id                       Int      @id @default(autoincrement())
  association_name         String   @unique @db.VarChar(255)
  association_name_english String?  @db.VarChar(255)
  error_translate          Boolean  @default(false)
  created_at               DateTime @db.Timestamptz(6)
  updated_at               DateTime @db.Timestamptz(6)
}

model lib_body_types {
  id                Int      @id @default(autoincrement())
  body_type         String   @unique @db.VarChar(55)
  body_type_english String?  @db.VarChar(55)
  error_translate   Boolean  @default(false)
  created_at        DateTime @db.Timestamptz(6)
  updated_at        DateTime @db.Timestamptz(6)
  details           vehicle_details[]
}

model lib_certificate_types {
  id               Int      @id @default(autoincrement())
  certificate_type String   @unique @db.VarChar(255)
  created_at       DateTime @db.Timestamptz(6)
  updated_at       DateTime @db.Timestamptz(6)
}

model lib_colours {
  id              Int      @id @default(autoincrement())
  color           String   @unique @db.VarChar(55)
  color_english   String?  @db.VarChar(55)
  error_translate Boolean  @default(false)
  created_at      DateTime @db.Timestamptz(6)
  updated_at      DateTime @db.Timestamptz(6)
  details         vehicle_details[]
}

model lib_company_types {
  id           Int      @id @default(autoincrement())
  company_type String   @unique @db.VarChar(55)
  created_at   DateTime @db.Timestamptz(6)
  updated_at   DateTime @db.Timestamptz(6)
}

model lib_diagnosis_codes {
  id         Int      @id @default(autoincrement())
  code       String   @unique @db.VarChar(55)
  name       String   @db.VarChar(55)
  created_at DateTime @db.Timestamptz(6)
  updated_at DateTime @db.Timestamptz(6)
}

model lib_diagnosis_comments {
  id              Int      @id @default(autoincrement())
  comment         String   @unique @db.VarChar(1000)
  comment_english String?  @db.VarChar(1000)
  error_translate Boolean  @default(false)
  created_at      DateTime @db.Timestamptz(6)
  updated_at      DateTime @db.Timestamptz(6)
}

model lib_diagnosis_results {
  id              Int      @id @default(autoincrement())
  result_code     String   @unique @db.VarChar(55)
  result          String   @db.VarChar(55)
  result_english  String?  @db.VarChar(55)
  error_translate Boolean  @default(false)
  created_at      DateTime @db.Timestamptz(6)
  updated_at      DateTime @db.Timestamptz(6)
}

model lib_districts {
  id               Int      @id @default(autoincrement())
  district         String   @unique @db.VarChar(55)
  district_english String?  @db.VarChar(55)
  error_translate  Boolean  @default(false)
  created_at       DateTime @db.Timestamptz(6)
  updated_at       DateTime @db.Timestamptz(6)
}

model lib_fuels {
  id              Int      @id @default(autoincrement())
  fuel            String   @unique @db.VarChar(55)
  fuel_english    String?  @db.VarChar(55)
  error_translate Boolean  @default(false)
  created_at      DateTime @db.Timestamptz(6)
  updated_at      DateTime @db.Timestamptz(6)
  details         vehicle_details[]
}

model lib_grades {
  id                   Int      @id @default(autoincrement())
  grade                String   @unique @db.VarChar(100)
  grade_english        String?  @db.VarChar(100)
  error_translate      Boolean  @default(false)
  grade_detail         String?  @db.VarChar(100)
  grade_detail_english String?  @db.VarChar(100)
  created_at           DateTime @db.Timestamptz(6)
  updated_at           DateTime @db.Timestamptz(6)
  details              vehicle_details[]
}

model lib_makes {
  id              Int      @id @default(autoincrement())
  make            String   @unique @db.VarChar(55)
  make_english    String?  @db.VarChar(55)
  make_short_name String?  @db.VarChar(55)
  error_translate Boolean  @default(false)
  created_at      DateTime @db.Timestamptz(6)
  updated_at      DateTime @db.Timestamptz(6)
  details         vehicle_details[]
}

model lib_models {
  id               Int      @id @default(autoincrement())
  model            String   @unique @db.VarChar(55)
  model_short_name String?  @db.VarChar(55)
  model_english    String?  @db.VarChar(55)
  error_translate  Boolean  @default(false)
  created_at       DateTime @db.Timestamptz(6)
  updated_at       DateTime @db.Timestamptz(6)
  details         vehicle_details[]
}

model lib_provinces {
  id               Int      @id @default(autoincrement())
  province         String   @unique @db.VarChar(55)
  province_english String?  @db.VarChar(55)
  error_translate  Boolean  @default(false)
  created_at       DateTime @db.Timestamptz(6)
  updated_at       DateTime @db.Timestamptz(6)
}

model lib_reservation_center {
  id                              Int      @id @default(autoincrement())
  reservation_center_name         String   @unique @db.VarChar(255)
  reservation_center_name_english String?  @db.VarChar(255)
  error_translate                 Boolean  @default(false)
  created_at                      DateTime @db.Timestamptz(6)
  updated_at                      DateTime @db.Timestamptz(6)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model lib_sell_types {
  id         Int      @id @default(autoincrement())
  sell_type  String   @unique @db.VarChar(55)
  created_at DateTime @db.Timestamptz(6)
  updated_at DateTime @db.Timestamptz(6)
}

model lib_transmissions {
  id                   Int      @id @default(autoincrement())
  transmission         String   @unique @db.VarChar(100)
  transmission_english String?  @db.VarChar(100)
  error_translate      Boolean  @default(false)
  created_at           DateTime @db.Timestamptz(6)
  updated_at           DateTime @db.Timestamptz(6)
  details              vehicle_details[]
}

model lib_trust_labels {
  id         Int      @id @default(autoincrement())
  label      String   @unique @db.VarChar(55)
  created_at DateTime @db.Timestamptz(6)
  updated_at DateTime @db.Timestamptz(6)
}

model lib_user_types {
  id         Int      @id @default(autoincrement())
  user_type  String?  @unique @db.VarChar(55)
  created_at DateTime @db.Timestamptz(6)
  updated_at DateTime @db.Timestamptz(6)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model lib_vehicle_photo_types {
  id         Int      @id @default(autoincrement())
  type       String   @unique @db.VarChar(55)
  created_at DateTime @db.Timestamptz(6)
  updated_at DateTime @db.Timestamptz(6)
  photos     vehicle_photos[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model lib_vehicle_types {
  id           Int      @id @default(autoincrement())
  vehicle_type String   @unique @db.VarChar(55)
  created_at   DateTime @db.Timestamptz(6)
  updated_at   DateTime @db.Timestamptz(6)
}

model not_joined_periods {
  id         BigInt   @id @default(autoincrement())
  vehicle_id BigInt
  start_date DateTime @db.Date
  end_date   DateTime @db.Date
  created_at DateTime @db.Timestamptz(6)
  updated_at DateTime @db.Timestamptz(6)

  @@unique([vehicle_id, start_date, end_date], map: "vehicle_not_joined_unique")
}

model owner_changes {
  id         BigInt   @id @default(autoincrement())
  vehicle_id BigInt
  date       DateTime @db.Date
  created_at DateTime @db.Timestamptz(6)
  updated_at DateTime @db.Timestamptz(6)

  @@unique([vehicle_id, date], map: "vehicle_owner_changes_unique_index")
}

model seller_company {
  id         BigInt   @id @default(autoincrement())
  seller_id  Int
  company_id Int
  created_at DateTime @db.Timestamptz(6)
  updated_at DateTime @db.Timestamptz(6)

  @@unique([seller_id, company_id], map: "seller_company_unique_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sellers {
  id                              Int       @id @default(autoincrement())
  id_user_on_auction              String    @unique @db.VarChar(55)
  phone_number                    String?   @db.VarChar(55)
  address_id                      Int?
  user_type_id                    Int?
  user_name                       String?   @db.VarChar(55)
  user_name_english               String?   @db.VarChar(55)
  nickname                        String?   @db.VarChar(100)
  nickname_english                String?   @db.VarChar(255)
  error_translate                 Boolean   @default(false)
  joined_date_time                DateTime? @db.Timestamptz(6)
  latest_modified_date_time       DateTime? @db.Timestamptz(6)
  certification                   Boolean?
  certificate_type_id             Int?
  receive_sms                     Boolean?
  receive_email                   Boolean?
  profile_image_url               String?   @db.VarChar(500)
  use_company_name                Boolean?
  currently_on_sales              Int       @default(0)
  total_sales                     Int       @default(0)
  recent_year_sales               Int       @default(0)
  safe_sale_start_date            DateTime? @db.Date
  safe_sale_for_year              Int       @default(0)
  safe_sale_for_days_on_this_year Int       @default(0)
  created_at                      DateTime  @db.Timestamptz(6)
  updated_at                      DateTime  @db.Timestamptz(6)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sys_filter_parse_control {
  id          BigInt   @id @default(autoincrement())
  filter      String   @db.VarChar(255)
  date        DateTime @db.Date
  pages       Json     @default("false") @db.Json
  is_finished Boolean  @default(false)
  num_threads Int?
  created_at  DateTime @db.Timestamptz(6)
  updated_at  DateTime @db.Timestamptz(6)

  @@unique([date, filter], map: "sys_filter_parse_control_date_filter")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sys_update_controls {
  id                BigInt   @id @default(autoincrement())
  vehicle_id        BigInt   @unique
  update_status     Boolean  @default(false)
  translate_status  Boolean  @default(false)
  data_missing_flag Boolean  @default(false)
  created_at        DateTime @db.Timestamptz(6)
  updated_at        DateTime @db.Timestamptz(6)

  @@index([update_status, data_missing_flag], map: "sys_update_controls_update_status_data_missing_flag")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model vehicle_details {
  id                  BigInt   @id @default(autoincrement())
  vehicle_id          BigInt   @unique
  make_id             Int
  model_id            Int
  grade_id            Int
  form_year           Int
  origin_price        Int?
  mileage             Int
  engine_displacement Int
  transmission_id     Int
  fuel_id             Int
  colour_id           Int
  body_type_id        Int 
  created_at          DateTime @db.Timestamptz(6)
  updated_at          DateTime @db.Timestamptz(6)
  encar               encar_vehicles @relation(fields:[vehicle_id],references:[id])
  fuel                lib_fuels @relation(fields: [fuel_id],references: [id])
  colours             lib_colours @relation(fields: [colour_id],references: [id])
  grades              lib_grades   @relation(fields: [grade_id],references: [id])
  makes               lib_makes @relation(fields: [make_id],references: [id])
  model               lib_models @relation(fields: [model_id], references: [id])
  transmission        lib_transmissions @relation(fields: [transmission_id], references: [id])
  body                lib_body_types @relation(fields: [body_type_id], references: [id])
  
}

model vehicle_photos {
  id                    BigInt   @id @default(autoincrement())
  vehicle_id            BigInt
  vehicle_photo_type_id Int
  url                   String   @db.VarChar(500)
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  encar                 encar_vehicles @relation(fields: [vehicle_id], references: [id])
  photo                 lib_vehicle_photo_types @relation(fields: [vehicle_photo_type_id], references: [id])

  @@index([vehicle_id, url], map: "vehicle_photos_vehicle_id_url")
}
